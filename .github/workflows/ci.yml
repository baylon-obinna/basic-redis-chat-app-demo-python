name: CI/CD Pipeline

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'README.md'
      - 'K8s/**'
      - 'helm/**'

jobs:
  # Build frontend and backend
  build:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 3
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Build frontend
      - name: Setup Node.js for frontend
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Install frontend dependencies
        run: |
          npm update    
          npm install --prefix ./client

      - name: Build frontend
        run: npm run build --prefix ./client

      # Build backend
      - name: Setup Python for backend
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      # Install system dependencies
      - name: Install system dependencies for Python
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-dev libffi-dev build-essential

      # Install Python dependencies with only-binary option
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --only-binary :all: -r requirements.txt

      - name: Check for dependency issues
        run: pip check

      - name: Start Redis with Password
        run: |
          docker run -d --name redis -p 6379:6379 redis:alpine redis-server --requirepass ${{ secrets.REDIS_PASSWORD }}
        
      - name: Wait for Redis
        run: |
          sleep 10  # Wait for Redis to be ready
      
      - name: Test backend build
        env:
          REDIS_URL: redis://:${{ secrets.REDIS_PASSWORD }}@localhost:6379/0
          CREATE_DEMO_DATA: True
        run: python ./app.py --test

  # Static Code Analysis
  static_analysis:
    runs-on: ubuntu-latest
    needs: build  # This will only run after the build stage is successful

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Static analysis for frontend 
      - name: Run ESLint for frontend
        run: npm run lint --prefix ./client

      # Static analysis for backend 
      - name: Run Flake8 for backend
        run: flake8 ./app.py

  # Docker image build and push with GitHub run ID tag
  docker_build_push:
    runs-on: ubuntu-latest
    needs: static_analysis  # This will only run after the static analysis is successful

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and tag frontend image with GitHub run ID
      - name: Build frontend Docker image
        run: |
          docker-compose build chatfrontend
          docker tag baylon44/redis-chat-frontend:latest baylon44/redis-chat-frontend:${{ github.run_id }}

      # Build and tag backend image with GitHub run ID
      - name: Build backend Docker image
        run: |
          docker-compose build chatbackend
          docker tag baylon44/redis-chat-backend:latest baylon44/redis-chat-backend:${{ github.run_id }}

      # Push images to Docker Hub
      - name: Push frontend Docker image
        run: docker push baylon44/redis-chat-frontend:${{ github.run_id }}

      - name: Push backend Docker image
        run: docker push baylon44/redis-chat-backend:${{ github.run_id }}

