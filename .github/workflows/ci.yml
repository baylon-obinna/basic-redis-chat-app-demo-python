name: CI/CD Pipeline

on:
  push:
    branches:
      - prod
    paths-ignore:
      - 'README.md'
      - 'K8s/**'
      - 'helm/**'

jobs:
  # Build frontend and backend
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Build frontend
      - name: Setup Node.js for frontend
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Install frontend dependencies
        run: |
          npm update    
          npm install --prefix ./client

      - name: Build frontend
        run: npm run build --prefix ./client

      # Build backend
      - name: Setup Python for backend
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Cache pip packages
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Install system dependencies
      - name: Install system dependencies for Python
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-dev libffi-dev build-essential

      # Install Python dependencies with only-binary option ###
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --only-binary :all: -r requirements.txt

      - name: Check for dependency issues
        run: pip check

  # Static Code Analysis
  static_analysis:
    runs-on: ubuntu-latest
    needs: build  # This will only run after the build stage is successful

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Install ESLint
        run: |
          npm install --prefix ./client
          npm install eslint --prefix ./client

      # Static analysis for frontend 
      - name: Run ESLint for frontend
        run: npm run lint --prefix ./client

      # Static analysis for backend 
      - name: Run Flake8 for backend
        run: |
          pip install flake8
          flake8 ./app.py

  # Docker image build and push with GitHub run ID tag
  docker_build_push:
    runs-on: ubuntu-latest
    needs: static_analysis  # This will only run after the static analysis is successful

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and tag frontend image with GitHub run ID
      - name: Build frontend Docker image
        run: |
          docker buildx build -t baylon44/redis-chat-frontend:latest -t baylon44/redis-chat-frontend:${{ github.run_id }} -f ./client/dockerfile  ./client --load
          docker push baylon44/redis-chat-frontend:${{ github.run_id }}

      # Build and tag backend image with GitHub run ID
      - name: Build backend Docker image
        run: |
          docker buildx build -t baylon44/redis-chat-backend:latest -t baylon44/redis-chat-backend:${{ github.run_id }} -f Dockerfile . --load
          docker push baylon44/redis-chat-backend:${{ github.run_id }}
  
  # update helms charts values with updated image tags and push to github
  helm_update:
    runs-on: ubuntu-latest
    needs: docker_build_push  # This will only run after the Docker image build and push is successful

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Update Helm values.yaml for frontend
        run: |
          sed -i '/chatfrontend:/,/tag:/s/tag:.*/tag: "${{ github.run_id }}"/' ./helm/redis-chat-app/values.yaml

      - name: Update Helm values.yaml for backend
        run: |
          sed -i '/chatbackend:/,/tag:/s/tag:.*/tag: "${{ github.run_id }}"/' ./helm/redis-chat-app/values.yaml

      - name: Commit and push updated values.yaml
        env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.email "nwaoshop@gmail.com"
          git config --global user.name "baylon-obinna"
          git add ./helm/redis-chat-app/values.yaml
          git commit -m "Update image tag to ${{ github.run_id }}"
          git push origin prod
